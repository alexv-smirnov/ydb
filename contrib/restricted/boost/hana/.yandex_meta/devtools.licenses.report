# File format ($ symbol means the beginning of a line):
#
# $ # this message
# $ # =======================
# $     # comments (all commentaries should starts with some number of spaces and # symbol)
# $ IGNORE_FILES {file1.ext1} {file2.ext2} - (optional) ignore listed files when generating license macro and credits
# $ RENAME {original license id} TO {new license id} # user comments - (optional) use {new license id} instead {original license id} in ya.make files
# $ # user comments
# $
# ${action} {license id} {license text hash}
# $BELONGS ./ya/make/file/relative/path/1/ya.make ./ya/make/2/ya.make
# ${all_file_action} filename
# $ # user commentaries (many lines)
# $ generated description - files with this license, license text... (some number of lines that starts with some number of spaces, do not modify)
# ${action} {license spdx} {license text hash}
# $BELONGS ./ya/make/file/relative/path/3/ya.make
# ${all_file_action} filename
# $    #    user commentaries
# $ generated description
# $ ...
#
# You can modify action, all_file_action and add commentaries
# Available actions:
# keep - keep license in contrib and use in credits
# skip - skip license
# remove - remove all files with this license
# rename - save license text/links into licenses texts file, but not store SPDX into LINCENSE macro. You should store correct license id into devtools.license.spdx.txt file
#
# {all file action} records will be generated when license text contains filename that exists on filesystem (in contrib directory)
# We suppose that that files can contain some license info
# Available all file actions:
# FILE_IGNORE - ignore file (do nothing)
# FILE_INCLUDE - include all file data into licenses text file
# =======================

SKIP     MPL-1.1              0719c83d37f34864e67338e4334355cc
BELONGS ya.make
    License text:
            //! Lift a MPL-style metafunction to a Metafunction.
    Scancode info:
        Original SPDX id: MPL-1.1
        Score           : 80.00
        Match type      : REFERENCE
        Links           : http://www.mozilla.com/MPL/1.1/index.html, http://www.mozilla.org/MPL/MPL-1.1.html, https://spdx.org/licenses/MPL-1.1
    Files with this license:
        include/boost/hana/fwd/type.hpp [417:417]

SKIP     MPL-1.1              174fd41ba7f8a6897edce2ffe88b2b8e
BELONGS ya.make
    License text:
            //! Given a MPL-style metafunction class, `metafunction_class<f>` is a
    Scancode info:
        Original SPDX id: MPL-1.1
        Score           : 80.00
        Match type      : REFERENCE
        Links           : http://www.mozilla.com/MPL/1.1/index.html, http://www.mozilla.org/MPL/MPL-1.1.html, https://spdx.org/licenses/MPL-1.1
    Files with this license:
        include/boost/hana/fwd/type.hpp [451:451]

KEEP     BSL-1.0              2c7a3fa82e66676005cd4ee2608fd7d2
BELONGS ya.make
    Note: matched license text is too long. Read it in the source files.
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : TEXT
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        LICENSE.md [3:25]

KEEP     BSL-1.0              58d7e90122d79b0017c88c4661121868
BELONGS ya.make
FILE_INCLUDE LICENSE.md found in files: include/boost/hana.hpp at line 8, include/boost/hana/accessors.hpp at line 7, include/boost/hana/adapt_adt.hpp at line 7, include/boost/hana/adapt_struct.hpp at line 7, include/boost/hana/adjust.hpp at line 7, include/boost/hana/adjust_if.hpp at line 7, include/boost/hana/all.hpp at line 7, include/boost/hana/all_of.hpp at line 7, include/boost/hana/and.hpp at line 7, include/boost/hana/any.hpp at line 7, include/boost/hana/any_of.hpp at line 7, include/boost/hana/ap.hpp at line 7, include/boost/hana/append.hpp at line 7, include/boost/hana/assert.hpp at line 7, include/boost/hana/at.hpp at line 7, include/boost/hana/at_key.hpp at line 8, include/boost/hana/back.hpp at line 7, include/boost/hana/basic_tuple.hpp at line 7, include/boost/hana/bool.hpp at line 7, include/boost/hana/cartesian_product.hpp at line 7, include/boost/hana/chain.hpp at line 7, include/boost/hana/comparing.hpp at line 7, include/boost/hana/concat.hpp at line 7, include/boost/hana/concept.hpp at line 7, include/boost/hana/concept/applicative.hpp at line 7, include/boost/hana/concept/comonad.hpp at line 7, include/boost/hana/concept/comparable.hpp at line 7, include/boost/hana/concept/constant.hpp at line 7, include/boost/hana/concept/euclidean_ring.hpp at line 7, include/boost/hana/concept/foldable.hpp at line 7, include/boost/hana/concept/functor.hpp at line 7, include/boost/hana/concept/group.hpp at line 7, include/boost/hana/concept/hashable.hpp at line 8, include/boost/hana/concept/integral_constant.hpp at line 7, include/boost/hana/concept/iterable.hpp at line 7, include/boost/hana/concept/logical.hpp at line 7, include/boost/hana/concept/metafunction.hpp at line 7, include/boost/hana/concept/monad.hpp at line 7, include/boost/hana/concept/monad_plus.hpp at line 7, include/boost/hana/concept/monoid.hpp at line 7, include/boost/hana/concept/orderable.hpp at line 7, include/boost/hana/concept/product.hpp at line 7, include/boost/hana/concept/ring.hpp at line 7, include/boost/hana/concept/searchable.hpp at line 7, include/boost/hana/concept/sequence.hpp at line 7, include/boost/hana/concept/struct.hpp at line 7, include/boost/hana/config.hpp at line 7, include/boost/hana/contains.hpp at line 7, include/boost/hana/core.hpp at line 7, include/boost/hana/core/common.hpp at line 7, include/boost/hana/core/default.hpp at line 7, include/boost/hana/core/dispatch.hpp at line 7, include/boost/hana/core/is_a.hpp at line 7, include/boost/hana/core/make.hpp at line 7, include/boost/hana/core/tag_of.hpp at line 7, include/boost/hana/core/to.hpp at line 7, include/boost/hana/core/when.hpp at line 7, include/boost/hana/count.hpp at line 7, include/boost/hana/count_if.hpp at line 7, include/boost/hana/cycle.hpp at line 7, include/boost/hana/define_struct.hpp at line 7, include/boost/hana/detail/algorithm.hpp at line 7, include/boost/hana/detail/any_of.hpp at line 7, include/boost/hana/detail/array.hpp at line 7, include/boost/hana/detail/canonical_constant.hpp at line 7, include/boost/hana/detail/concepts.hpp at line 7, include/boost/hana/detail/create.hpp at line 7, include/boost/hana/detail/decay.hpp at line 8, include/boost/hana/detail/dispatch_if.hpp at line 7, include/boost/hana/detail/ebo.hpp at line 7, include/boost/hana/detail/fast_and.hpp at line 7, include/boost/hana/detail/first_unsatisfied_index.hpp at line 7, include/boost/hana/detail/has_common_embedding.hpp at line 7, include/boost/hana/detail/has_duplicates.hpp at line 7, include/boost/hana/detail/hash_table.hpp at line 8, include/boost/hana/detail/index_if.hpp at line 8, include/boost/hana/detail/integral_constant.hpp at line 8, include/boost/hana/detail/intrinsics.hpp at line 7, include/boost/hana/detail/nested_by.hpp at line 7, include/boost/hana/detail/nested_by_fwd.hpp at line 7, include/boost/hana/detail/nested_than.hpp at line 7, include/boost/hana/detail/nested_than_fwd.hpp at line 7, include/boost/hana/detail/nested_to.hpp at line 7, include/boost/hana/detail/nested_to_fwd.hpp at line 7, include/boost/hana/detail/operators/adl.hpp at line 7, include/boost/hana/detail/operators/arithmetic.hpp at line 7, include/boost/hana/detail/operators/comparable.hpp at line 7, include/boost/hana/detail/operators/iterable.hpp at line 7, include/boost/hana/detail/operators/logical.hpp at line 7, include/boost/hana/detail/operators/monad.hpp at line 7, include/boost/hana/detail/operators/orderable.hpp at line 7, include/boost/hana/detail/operators/searchable.hpp at line 7, include/boost/hana/detail/preprocessor.hpp at line 7, include/boost/hana/detail/std_common_type.hpp at line 7, include/boost/hana/detail/struct_macros.hpp at line 12, include/boost/hana/detail/type_at.hpp at line 7, include/boost/hana/detail/type_foldl1.hpp at line 7, include/boost/hana/detail/type_foldr1.hpp at line 7, include/boost/hana/detail/unpack_flatten.hpp at line 7, include/boost/hana/detail/variadic/at.hpp at line 7, include/boost/hana/detail/variadic/drop_into.hpp at line 7, include/boost/hana/detail/variadic/foldl1.hpp at line 7, include/boost/hana/detail/variadic/foldr1.hpp at line 7, include/boost/hana/detail/variadic/reverse_apply.hpp at line 7, include/boost/hana/detail/variadic/reverse_apply/flat.hpp at line 7, include/boost/hana/detail/variadic/reverse_apply/unrolled.hpp at line 7, include/boost/hana/detail/variadic/split_at.hpp at line 7, include/boost/hana/detail/variadic/take.hpp at line 7, include/boost/hana/detail/void_t.hpp at line 7, include/boost/hana/detail/wrong.hpp at line 7, include/boost/hana/difference.hpp at line 7, include/boost/hana/div.hpp at line 7, include/boost/hana/drop_back.hpp at line 7, include/boost/hana/drop_front.hpp at line 7, include/boost/hana/drop_front_exactly.hpp at line 7, include/boost/hana/drop_while.hpp at line 7, include/boost/hana/duplicate.hpp at line 7, include/boost/hana/empty.hpp at line 7, include/boost/hana/equal.hpp at line 7, include/boost/hana/erase_key.hpp at line 7, include/boost/hana/eval.hpp at line 7, include/boost/hana/eval_if.hpp at line 7, include/boost/hana/experimental/printable.hpp at line 7, include/boost/hana/experimental/type_name.hpp at line 7, include/boost/hana/experimental/types.hpp at line 7, include/boost/hana/experimental/view.hpp at line 7, include/boost/hana/ext/boost.hpp at line 7, include/boost/hana/ext/boost/fusion.hpp at line 7, include/boost/hana/ext/boost/fusion/deque.hpp at line 7, include/boost/hana/ext/boost/fusion/detail/common.hpp at line 7, include/boost/hana/ext/boost/fusion/list.hpp at line 7, include/boost/hana/ext/boost/fusion/tuple.hpp at line 11, include/boost/hana/ext/boost/fusion/vector.hpp at line 7, include/boost/hana/ext/boost/mpl.hpp at line 7, include/boost/hana/ext/boost/mpl/integral_c.hpp at line 7, include/boost/hana/ext/boost/mpl/list.hpp at line 7, include/boost/hana/ext/boost/mpl/vector.hpp at line 7, include/boost/hana/ext/boost/tuple.hpp at line 7, include/boost/hana/ext/std.hpp at line 7, include/boost/hana/ext/std/array.hpp at line 7, include/boost/hana/ext/std/integer_sequence.hpp at line 7, include/boost/hana/ext/std/integral_constant.hpp at line 7, include/boost/hana/ext/std/pair.hpp at line 7, include/boost/hana/ext/std/ratio.hpp at line 7, include/boost/hana/ext/std/tuple.hpp at line 7, include/boost/hana/ext/std/vector.hpp at line 8, include/boost/hana/extend.hpp at line 7, include/boost/hana/extract.hpp at line 7, include/boost/hana/fill.hpp at line 7, include/boost/hana/filter.hpp at line 7, include/boost/hana/find.hpp at line 7, include/boost/hana/find_if.hpp at line 8, include/boost/hana/first.hpp at line 7, include/boost/hana/flatten.hpp at line 7, include/boost/hana/fold.hpp at line 7, include/boost/hana/fold_left.hpp at line 7, include/boost/hana/fold_right.hpp at line 7, include/boost/hana/for_each.hpp at line 7, include/boost/hana/front.hpp at line 7, include/boost/hana/functional.hpp at line 7, include/boost/hana/functional/always.hpp at line 7, include/boost/hana/functional/apply.hpp at line 7, include/boost/hana/functional/arg.hpp at line 7, include/boost/hana/functional/capture.hpp at line 7, include/boost/hana/functional/compose.hpp at line 7, include/boost/hana/functional/curry.hpp at line 7, include/boost/hana/functional/demux.hpp at line 7, include/boost/hana/functional/fix.hpp at line 7, include/boost/hana/functional/flip.hpp at line 7, include/boost/hana/functional/id.hpp at line 7, include/boost/hana/functional/infix.hpp at line 7, include/boost/hana/functional/iterate.hpp at line 7, include/boost/hana/functional/lockstep.hpp at line 7, include/boost/hana/functional/on.hpp at line 7, include/boost/hana/functional/overload.hpp at line 7, include/boost/hana/functional/overload_linearly.hpp at line 7, include/boost/hana/functional/partial.hpp at line 7, include/boost/hana/functional/placeholder.hpp at line 7, include/boost/hana/functional/reverse_partial.hpp at line 7, include/boost/hana/fuse.hpp at line 7, include/boost/hana/fwd/accessors.hpp at line 7, include/boost/hana/fwd/adapt_adt.hpp at line 7, include/boost/hana/fwd/adapt_struct.hpp at line 7, include/boost/hana/fwd/adjust.hpp at line 7, include/boost/hana/fwd/adjust_if.hpp at line 7, include/boost/hana/fwd/all.hpp at line 7, include/boost/hana/fwd/all_of.hpp at line 7, include/boost/hana/fwd/and.hpp at line 7, include/boost/hana/fwd/any.hpp at line 7, include/boost/hana/fwd/any_of.hpp at line 7, include/boost/hana/fwd/ap.hpp at line 7, include/boost/hana/fwd/append.hpp at line 7, include/boost/hana/fwd/at.hpp at line 7, include/boost/hana/fwd/at_key.hpp at line 7, include/boost/hana/fwd/back.hpp at line 7, include/boost/hana/fwd/basic_tuple.hpp at line 7, include/boost/hana/fwd/bool.hpp at line 7, include/boost/hana/fwd/cartesian_product.hpp at line 7, include/boost/hana/fwd/chain.hpp at line 7, include/boost/hana/fwd/comparing.hpp at line 7, include/boost/hana/fwd/concat.hpp at line 7, include/boost/hana/fwd/concept/applicative.hpp at line 7, include/boost/hana/fwd/concept/comonad.hpp at line 7, include/boost/hana/fwd/concept/comparable.hpp at line 7, include/boost/hana/fwd/concept/constant.hpp at line 7, include/boost/hana/fwd/concept/euclidean_ring.hpp at line 7, include/boost/hana/fwd/concept/foldable.hpp at line 7, include/boost/hana/fwd/concept/functor.hpp at line 7, include/boost/hana/fwd/concept/group.hpp at line 7, include/boost/hana/fwd/concept/hashable.hpp at line 8, include/boost/hana/fwd/concept/integral_constant.hpp at line 7, include/boost/hana/fwd/concept/iterable.hpp at line 7, include/boost/hana/fwd/concept/logical.hpp at line 7, include/boost/hana/fwd/concept/metafunction.hpp at line 7, include/boost/hana/fwd/concept/monad.hpp at line 7, include/boost/hana/fwd/concept/monad_plus.hpp at line 7, include/boost/hana/fwd/concept/monoid.hpp at line 7, include/boost/hana/fwd/concept/orderable.hpp at line 7, include/boost/hana/fwd/concept/product.hpp at line 7, include/boost/hana/fwd/concept/ring.hpp at line 7, include/boost/hana/fwd/concept/searchable.hpp at line 7, include/boost/hana/fwd/concept/sequence.hpp at line 7, include/boost/hana/fwd/concept/struct.hpp at line 7, include/boost/hana/fwd/contains.hpp at line 7, include/boost/hana/fwd/core.hpp at line 7, include/boost/hana/fwd/core/common.hpp at line 7, include/boost/hana/fwd/core/default.hpp at line 7, include/boost/hana/fwd/core/is_a.hpp at line 7, include/boost/hana/fwd/core/make.hpp at line 7, include/boost/hana/fwd/core/tag_of.hpp at line 7, include/boost/hana/fwd/core/to.hpp at line 7, include/boost/hana/fwd/core/when.hpp at line 7, include/boost/hana/fwd/count.hpp at line 7, include/boost/hana/fwd/count_if.hpp at line 7, include/boost/hana/fwd/cycle.hpp at line 7, include/boost/hana/fwd/define_struct.hpp at line 7, include/boost/hana/fwd/difference.hpp at line 7, include/boost/hana/fwd/div.hpp at line 7, include/boost/hana/fwd/drop_back.hpp at line 7, include/boost/hana/fwd/drop_front.hpp at line 7, include/boost/hana/fwd/drop_front_exactly.hpp at line 7, include/boost/hana/fwd/drop_while.hpp at line 7, include/boost/hana/fwd/duplicate.hpp at line 7, include/boost/hana/fwd/empty.hpp at line 7, include/boost/hana/fwd/equal.hpp at line 7, include/boost/hana/fwd/erase_key.hpp at line 7, include/boost/hana/fwd/eval.hpp at line 7, include/boost/hana/fwd/eval_if.hpp at line 7, include/boost/hana/fwd/extend.hpp at line 7, include/boost/hana/fwd/extract.hpp at line 7, include/boost/hana/fwd/fill.hpp at line 7, include/boost/hana/fwd/filter.hpp at line 7, include/boost/hana/fwd/find.hpp at line 7, include/boost/hana/fwd/find_if.hpp at line 7, include/boost/hana/fwd/first.hpp at line 7, include/boost/hana/fwd/flatten.hpp at line 7, include/boost/hana/fwd/fold.hpp at line 7, include/boost/hana/fwd/fold_left.hpp at line 7, include/boost/hana/fwd/fold_right.hpp at line 7, include/boost/hana/fwd/for_each.hpp at line 7, include/boost/hana/fwd/front.hpp at line 7, include/boost/hana/fwd/fuse.hpp at line 7, include/boost/hana/fwd/greater.hpp at line 7, include/boost/hana/fwd/greater_equal.hpp at line 7, include/boost/hana/fwd/group.hpp at line 7, include/boost/hana/fwd/hash.hpp at line 8, include/boost/hana/fwd/if.hpp at line 7, include/boost/hana/fwd/index_if.hpp at line 8, include/boost/hana/fwd/insert.hpp at line 7, include/boost/hana/fwd/insert_range.hpp at line 7, include/boost/hana/fwd/integral_constant.hpp at line 7, include/boost/hana/fwd/intersection.hpp at line 7, include/boost/hana/fwd/intersperse.hpp at line 7, include/boost/hana/fwd/is_disjoint.hpp at line 7, include/boost/hana/fwd/is_empty.hpp at line 7, include/boost/hana/fwd/is_subset.hpp at line 7, include/boost/hana/fwd/keys.hpp at line 7, include/boost/hana/fwd/lazy.hpp at line 7, include/boost/hana/fwd/length.hpp at line 7, include/boost/hana/fwd/less.hpp at line 7, include/boost/hana/fwd/less_equal.hpp at line 7, include/boost/hana/fwd/lexicographical_compare.hpp at line 7, include/boost/hana/fwd/lift.hpp at line 7, include/boost/hana/fwd/map.hpp at line 7, include/boost/hana/fwd/max.hpp at line 7, include/boost/hana/fwd/maximum.hpp at line 7, include/boost/hana/fwd/members.hpp at line 7, include/boost/hana/fwd/min.hpp at line 7, include/boost/hana/fwd/minimum.hpp at line 7, include/boost/hana/fwd/minus.hpp at line 7, include/boost/hana/fwd/mod.hpp at line 7, include/boost/hana/fwd/monadic_compose.hpp at line 7, include/boost/hana/fwd/monadic_fold_left.hpp at line 7, include/boost/hana/fwd/monadic_fold_right.hpp at line 7, include/boost/hana/fwd/mult.hpp at line 7, include/boost/hana/fwd/negate.hpp at line 7, include/boost/hana/fwd/none.hpp at line 7, include/boost/hana/fwd/none_of.hpp at line 7, include/boost/hana/fwd/not.hpp at line 7, include/boost/hana/fwd/not_equal.hpp at line 7, include/boost/hana/fwd/one.hpp at line 7, include/boost/hana/fwd/optional.hpp at line 7, include/boost/hana/fwd/or.hpp at line 7, include/boost/hana/fwd/ordering.hpp at line 7, include/boost/hana/fwd/pair.hpp at line 7, include/boost/hana/fwd/partition.hpp at line 7, include/boost/hana/fwd/permutations.hpp at line 7, include/boost/hana/fwd/plus.hpp at line 7, include/boost/hana/fwd/power.hpp at line 7, include/boost/hana/fwd/prefix.hpp at line 7, include/boost/hana/fwd/prepend.hpp at line 7, include/boost/hana/fwd/product.hpp at line 7, include/boost/hana/fwd/range.hpp at line 7, include/boost/hana/fwd/remove.hpp at line 7, include/boost/hana/fwd/remove_at.hpp at line 7, include/boost/hana/fwd/remove_if.hpp at line 7, include/boost/hana/fwd/remove_range.hpp at line 7, include/boost/hana/fwd/repeat.hpp at line 7, include/boost/hana/fwd/replace.hpp at line 7, include/boost/hana/fwd/replace_if.hpp at line 7, include/boost/hana/fwd/replicate.hpp at line 7, include/boost/hana/fwd/reverse.hpp at line 7, include/boost/hana/fwd/reverse_fold.hpp at line 7, include/boost/hana/fwd/scan_left.hpp at line 7, include/boost/hana/fwd/scan_right.hpp at line 7, include/boost/hana/fwd/second.hpp at line 7, include/boost/hana/fwd/set.hpp at line 7, include/boost/hana/fwd/size.hpp at line 7, include/boost/hana/fwd/slice.hpp at line 7, include/boost/hana/fwd/sort.hpp at line 7, include/boost/hana/fwd/span.hpp at line 7, include/boost/hana/fwd/string.hpp at line 7, include/boost/hana/fwd/suffix.hpp at line 7, include/boost/hana/fwd/sum.hpp at line 7, include/boost/hana/fwd/symmetric_difference.hpp at line 7, include/boost/hana/fwd/take_back.hpp at line 7, include/boost/hana/fwd/take_front.hpp at line 7, include/boost/hana/fwd/take_while.hpp at line 7, include/boost/hana/fwd/tap.hpp at line 7, include/boost/hana/fwd/then.hpp at line 7, include/boost/hana/fwd/transform.hpp at line 7, include/boost/hana/fwd/tuple.hpp at line 7, include/boost/hana/fwd/type.hpp at line 7, include/boost/hana/fwd/unfold_left.hpp at line 7, include/boost/hana/fwd/unfold_right.hpp at line 7, include/boost/hana/fwd/union.hpp at line 7, include/boost/hana/fwd/unique.hpp at line 7, include/boost/hana/fwd/unpack.hpp at line 7, include/boost/hana/fwd/value.hpp at line 7, include/boost/hana/fwd/while.hpp at line 7, include/boost/hana/fwd/zero.hpp at line 7, include/boost/hana/fwd/zip.hpp at line 7, include/boost/hana/fwd/zip_shortest.hpp at line 7, include/boost/hana/fwd/zip_shortest_with.hpp at line 7, include/boost/hana/fwd/zip_with.hpp at line 7, include/boost/hana/greater.hpp at line 7, include/boost/hana/greater_equal.hpp at line 7, include/boost/hana/group.hpp at line 7, include/boost/hana/hash.hpp at line 7, include/boost/hana/if.hpp at line 7, include/boost/hana/index_if.hpp at line 8, include/boost/hana/insert.hpp at line 7, include/boost/hana/insert_range.hpp at line 7, include/boost/hana/integral_constant.hpp at line 7, include/boost/hana/intersection.hpp at line 7, include/boost/hana/intersperse.hpp at line 7, include/boost/hana/is_disjoint.hpp at line 7, include/boost/hana/is_empty.hpp at line 7, include/boost/hana/is_subset.hpp at line 7, include/boost/hana/keys.hpp at line 7, include/boost/hana/lazy.hpp at line 7, include/boost/hana/length.hpp at line 7, include/boost/hana/less.hpp at line 7, include/boost/hana/less_equal.hpp at line 7, include/boost/hana/lexicographical_compare.hpp at line 7, include/boost/hana/lift.hpp at line 7, include/boost/hana/map.hpp at line 7, include/boost/hana/max.hpp at line 7, include/boost/hana/maximum.hpp at line 7, include/boost/hana/members.hpp at line 7, include/boost/hana/min.hpp at line 7, include/boost/hana/minimum.hpp at line 7, include/boost/hana/minus.hpp at line 7, include/boost/hana/mod.hpp at line 7, include/boost/hana/monadic_compose.hpp at line 7, include/boost/hana/monadic_fold_left.hpp at line 7, include/boost/hana/monadic_fold_right.hpp at line 7, include/boost/hana/mult.hpp at line 7, include/boost/hana/negate.hpp at line 7, include/boost/hana/none.hpp at line 7, include/boost/hana/none_of.hpp at line 7, include/boost/hana/not.hpp at line 7, include/boost/hana/not_equal.hpp at line 7, include/boost/hana/one.hpp at line 7, include/boost/hana/optional.hpp at line 7, include/boost/hana/or.hpp at line 7, include/boost/hana/ordering.hpp at line 7, include/boost/hana/pair.hpp at line 7, include/boost/hana/partition.hpp at line 7, include/boost/hana/permutations.hpp at line 7, include/boost/hana/plus.hpp at line 7, include/boost/hana/power.hpp at line 7, include/boost/hana/prefix.hpp at line 7, include/boost/hana/prepend.hpp at line 7, include/boost/hana/product.hpp at line 7, include/boost/hana/range.hpp at line 7, include/boost/hana/remove.hpp at line 7, include/boost/hana/remove_at.hpp at line 7, include/boost/hana/remove_if.hpp at line 7, include/boost/hana/remove_range.hpp at line 7, include/boost/hana/repeat.hpp at line 7, include/boost/hana/replace.hpp at line 7, include/boost/hana/replace_if.hpp at line 7, include/boost/hana/replicate.hpp at line 7, include/boost/hana/reverse.hpp at line 7, include/boost/hana/reverse_fold.hpp at line 7, include/boost/hana/scan_left.hpp at line 7, include/boost/hana/scan_right.hpp at line 7, include/boost/hana/second.hpp at line 7, include/boost/hana/set.hpp at line 7, include/boost/hana/size.hpp at line 7, include/boost/hana/slice.hpp at line 7, include/boost/hana/sort.hpp at line 7, include/boost/hana/span.hpp at line 7, include/boost/hana/string.hpp at line 7, include/boost/hana/suffix.hpp at line 7, include/boost/hana/sum.hpp at line 7, include/boost/hana/symmetric_difference.hpp at line 7, include/boost/hana/take_back.hpp at line 7, include/boost/hana/take_front.hpp at line 7, include/boost/hana/take_while.hpp at line 7, include/boost/hana/tap.hpp at line 7, include/boost/hana/then.hpp at line 7, include/boost/hana/traits.hpp at line 8, include/boost/hana/transform.hpp at line 7, include/boost/hana/tuple.hpp at line 8, include/boost/hana/type.hpp at line 7, include/boost/hana/unfold_left.hpp at line 7, include/boost/hana/unfold_right.hpp at line 7, include/boost/hana/union.hpp at line 7, include/boost/hana/unique.hpp at line 7, include/boost/hana/unpack.hpp at line 7, include/boost/hana/value.hpp at line 7, include/boost/hana/version.hpp at line 7, include/boost/hana/while.hpp at line 7, include/boost/hana/zero.hpp at line 7, include/boost/hana/zip.hpp at line 7, include/boost/hana/zip_shortest.hpp at line 7, include/boost/hana/zip_shortest_with.hpp at line 7, include/boost/hana/zip_with.hpp at line 7
    License text:
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 76.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/hana.hpp [7:8]
        include/boost/hana/accessors.hpp [6:7]
        include/boost/hana/adapt_adt.hpp [6:7]
        include/boost/hana/adapt_struct.hpp [6:7]
        include/boost/hana/adjust.hpp [6:7]
        include/boost/hana/adjust_if.hpp [6:7]
        include/boost/hana/all.hpp [6:7]
        include/boost/hana/all_of.hpp [6:7]
        include/boost/hana/and.hpp [6:7]
        include/boost/hana/any.hpp [6:7]
        include/boost/hana/any_of.hpp [6:7]
        include/boost/hana/ap.hpp [6:7]
        include/boost/hana/append.hpp [6:7]
        include/boost/hana/assert.hpp [6:7]
        include/boost/hana/at.hpp [6:7]
        include/boost/hana/at_key.hpp [7:8]
        include/boost/hana/back.hpp [6:7]
        include/boost/hana/basic_tuple.hpp [6:7]
        include/boost/hana/bool.hpp [6:7]
        include/boost/hana/cartesian_product.hpp [6:7]
        include/boost/hana/chain.hpp [6:7]
        include/boost/hana/comparing.hpp [6:7]
        include/boost/hana/concat.hpp [6:7]
        include/boost/hana/concept.hpp [6:7]
        include/boost/hana/concept/applicative.hpp [6:7]
        include/boost/hana/concept/comonad.hpp [6:7]
        include/boost/hana/concept/comparable.hpp [6:7]
        include/boost/hana/concept/constant.hpp [6:7]
        include/boost/hana/concept/euclidean_ring.hpp [6:7]
        include/boost/hana/concept/foldable.hpp [6:7]
        include/boost/hana/concept/functor.hpp [6:7]
        include/boost/hana/concept/group.hpp [6:7]
        include/boost/hana/concept/hashable.hpp [7:8]
        include/boost/hana/concept/integral_constant.hpp [6:7]
        include/boost/hana/concept/iterable.hpp [6:7]
        include/boost/hana/concept/logical.hpp [6:7]
        include/boost/hana/concept/metafunction.hpp [6:7]
        include/boost/hana/concept/monad.hpp [6:7]
        include/boost/hana/concept/monad_plus.hpp [6:7]
        include/boost/hana/concept/monoid.hpp [6:7]
        include/boost/hana/concept/orderable.hpp [6:7]
        include/boost/hana/concept/product.hpp [6:7]
        include/boost/hana/concept/ring.hpp [6:7]
        include/boost/hana/concept/searchable.hpp [6:7]
        include/boost/hana/concept/sequence.hpp [6:7]
        include/boost/hana/concept/struct.hpp [6:7]
        include/boost/hana/config.hpp [6:7]
        include/boost/hana/contains.hpp [6:7]
        include/boost/hana/core.hpp [6:7]
        include/boost/hana/core/common.hpp [6:7]
        include/boost/hana/core/default.hpp [6:7]
        include/boost/hana/core/dispatch.hpp [6:7]
        include/boost/hana/core/is_a.hpp [6:7]
        include/boost/hana/core/make.hpp [6:7]
        include/boost/hana/core/tag_of.hpp [6:7]
        include/boost/hana/core/to.hpp [6:7]
        include/boost/hana/core/when.hpp [6:7]
        include/boost/hana/count.hpp [6:7]
        include/boost/hana/count_if.hpp [6:7]
        include/boost/hana/cycle.hpp [6:7]
        include/boost/hana/define_struct.hpp [6:7]
        include/boost/hana/detail/algorithm.hpp [6:7]
        include/boost/hana/detail/any_of.hpp [6:7]
        include/boost/hana/detail/array.hpp [6:7]
        include/boost/hana/detail/canonical_constant.hpp [6:7]
        include/boost/hana/detail/concepts.hpp [6:7]
        include/boost/hana/detail/create.hpp [6:7]
        include/boost/hana/detail/decay.hpp [7:8]
        include/boost/hana/detail/dispatch_if.hpp [6:7]
        include/boost/hana/detail/ebo.hpp [6:7]
        include/boost/hana/detail/fast_and.hpp [6:7]
        include/boost/hana/detail/first_unsatisfied_index.hpp [6:7]
        include/boost/hana/detail/has_common_embedding.hpp [6:7]
        include/boost/hana/detail/has_duplicates.hpp [6:7]
        include/boost/hana/detail/hash_table.hpp [7:8]
        include/boost/hana/detail/index_if.hpp [7:8]
        include/boost/hana/detail/integral_constant.hpp [7:8]
        include/boost/hana/detail/intrinsics.hpp [6:7]
        include/boost/hana/detail/nested_by.hpp [6:7]
        include/boost/hana/detail/nested_by_fwd.hpp [6:7]
        include/boost/hana/detail/nested_than.hpp [6:7]
        include/boost/hana/detail/nested_than_fwd.hpp [6:7]
        include/boost/hana/detail/nested_to.hpp [6:7]
        include/boost/hana/detail/nested_to_fwd.hpp [6:7]
        include/boost/hana/detail/operators/adl.hpp [6:7]
        include/boost/hana/detail/operators/arithmetic.hpp [6:7]
        include/boost/hana/detail/operators/comparable.hpp [6:7]
        include/boost/hana/detail/operators/iterable.hpp [6:7]
        include/boost/hana/detail/operators/logical.hpp [6:7]
        include/boost/hana/detail/operators/monad.hpp [6:7]
        include/boost/hana/detail/operators/orderable.hpp [6:7]
        include/boost/hana/detail/operators/searchable.hpp [6:7]
        include/boost/hana/detail/preprocessor.hpp [6:7]
        include/boost/hana/detail/std_common_type.hpp [6:7]
        include/boost/hana/detail/struct_macros.hpp [11:12]
        include/boost/hana/detail/type_at.hpp [6:7]
        include/boost/hana/detail/type_foldl1.hpp [6:7]
        include/boost/hana/detail/type_foldr1.hpp [6:7]
        include/boost/hana/detail/unpack_flatten.hpp [6:7]
        include/boost/hana/detail/variadic/at.hpp [6:7]
        include/boost/hana/detail/variadic/drop_into.hpp [6:7]
        include/boost/hana/detail/variadic/foldl1.hpp [6:7]
        include/boost/hana/detail/variadic/foldr1.hpp [6:7]
        include/boost/hana/detail/variadic/reverse_apply.hpp [6:7]
        include/boost/hana/detail/variadic/reverse_apply/flat.hpp [6:7]
        include/boost/hana/detail/variadic/reverse_apply/unrolled.hpp [6:7]
        include/boost/hana/detail/variadic/split_at.hpp [6:7]
        include/boost/hana/detail/variadic/take.hpp [6:7]
        include/boost/hana/detail/void_t.hpp [6:7]
        include/boost/hana/detail/wrong.hpp [6:7]
        include/boost/hana/difference.hpp [6:7]
        include/boost/hana/div.hpp [6:7]
        include/boost/hana/drop_back.hpp [6:7]
        include/boost/hana/drop_front.hpp [6:7]
        include/boost/hana/drop_front_exactly.hpp [6:7]
        include/boost/hana/drop_while.hpp [6:7]
        include/boost/hana/duplicate.hpp [6:7]
        include/boost/hana/empty.hpp [6:7]
        include/boost/hana/equal.hpp [6:7]
        include/boost/hana/erase_key.hpp [6:7]
        include/boost/hana/eval.hpp [6:7]
        include/boost/hana/eval_if.hpp [6:7]
        include/boost/hana/experimental/printable.hpp [6:7]
        include/boost/hana/experimental/type_name.hpp [6:7]
        include/boost/hana/experimental/types.hpp [6:7]
        include/boost/hana/experimental/view.hpp [6:7]
        include/boost/hana/ext/boost.hpp [6:7]
        include/boost/hana/ext/boost/fusion.hpp [6:7]
        include/boost/hana/ext/boost/fusion/deque.hpp [6:7]
        include/boost/hana/ext/boost/fusion/detail/common.hpp [6:7]
        include/boost/hana/ext/boost/fusion/list.hpp [6:7]
        include/boost/hana/ext/boost/fusion/tuple.hpp [10:11]
        include/boost/hana/ext/boost/fusion/vector.hpp [6:7]
        include/boost/hana/ext/boost/mpl.hpp [6:7]
        include/boost/hana/ext/boost/mpl/integral_c.hpp [6:7]
        include/boost/hana/ext/boost/mpl/list.hpp [6:7]
        include/boost/hana/ext/boost/mpl/vector.hpp [6:7]
        include/boost/hana/ext/boost/tuple.hpp [6:7]
        include/boost/hana/ext/std.hpp [6:7]
        include/boost/hana/ext/std/array.hpp [6:7]
        include/boost/hana/ext/std/integer_sequence.hpp [6:7]
        include/boost/hana/ext/std/integral_constant.hpp [6:7]
        include/boost/hana/ext/std/pair.hpp [6:7]
        include/boost/hana/ext/std/ratio.hpp [6:7]
        include/boost/hana/ext/std/tuple.hpp [6:7]
        include/boost/hana/ext/std/vector.hpp [7:8]
        include/boost/hana/extend.hpp [6:7]
        include/boost/hana/extract.hpp [6:7]
        include/boost/hana/fill.hpp [6:7]
        include/boost/hana/filter.hpp [6:7]
        include/boost/hana/find.hpp [6:7]
        include/boost/hana/find_if.hpp [7:8]
        include/boost/hana/first.hpp [6:7]
        include/boost/hana/flatten.hpp [6:7]
        include/boost/hana/fold.hpp [6:7]
        include/boost/hana/fold_left.hpp [6:7]
        include/boost/hana/fold_right.hpp [6:7]
        include/boost/hana/for_each.hpp [6:7]
        include/boost/hana/front.hpp [6:7]
        include/boost/hana/functional.hpp [6:7]
        include/boost/hana/functional/always.hpp [6:7]
        include/boost/hana/functional/apply.hpp [6:7]
        include/boost/hana/functional/arg.hpp [6:7]
        include/boost/hana/functional/capture.hpp [6:7]
        include/boost/hana/functional/compose.hpp [6:7]
        include/boost/hana/functional/curry.hpp [6:7]
        include/boost/hana/functional/demux.hpp [6:7]
        include/boost/hana/functional/fix.hpp [6:7]
        include/boost/hana/functional/flip.hpp [6:7]
        include/boost/hana/functional/id.hpp [6:7]
        include/boost/hana/functional/infix.hpp [6:7]
        include/boost/hana/functional/iterate.hpp [6:7]
        include/boost/hana/functional/lockstep.hpp [6:7]
        include/boost/hana/functional/on.hpp [6:7]
        include/boost/hana/functional/overload.hpp [6:7]
        include/boost/hana/functional/overload_linearly.hpp [6:7]
        include/boost/hana/functional/partial.hpp [6:7]
        include/boost/hana/functional/placeholder.hpp [6:7]
        include/boost/hana/functional/reverse_partial.hpp [6:7]
        include/boost/hana/fuse.hpp [6:7]
        include/boost/hana/fwd/accessors.hpp [6:7]
        include/boost/hana/fwd/adapt_adt.hpp [6:7]
        include/boost/hana/fwd/adapt_struct.hpp [6:7]
        include/boost/hana/fwd/adjust.hpp [6:7]
        include/boost/hana/fwd/adjust_if.hpp [6:7]
        include/boost/hana/fwd/all.hpp [6:7]
        include/boost/hana/fwd/all_of.hpp [6:7]
        include/boost/hana/fwd/and.hpp [6:7]
        include/boost/hana/fwd/any.hpp [6:7]
        include/boost/hana/fwd/any_of.hpp [6:7]
        include/boost/hana/fwd/ap.hpp [6:7]
        include/boost/hana/fwd/append.hpp [6:7]
        include/boost/hana/fwd/at.hpp [6:7]
        include/boost/hana/fwd/at_key.hpp [6:7]
        include/boost/hana/fwd/back.hpp [6:7]
        include/boost/hana/fwd/basic_tuple.hpp [6:7]
        include/boost/hana/fwd/bool.hpp [6:7]
        include/boost/hana/fwd/cartesian_product.hpp [6:7]
        include/boost/hana/fwd/chain.hpp [6:7]
        include/boost/hana/fwd/comparing.hpp [6:7]
        include/boost/hana/fwd/concat.hpp [6:7]
        include/boost/hana/fwd/concept/applicative.hpp [6:7]
        include/boost/hana/fwd/concept/comonad.hpp [6:7]
        include/boost/hana/fwd/concept/comparable.hpp [6:7]
        include/boost/hana/fwd/concept/constant.hpp [6:7]
        include/boost/hana/fwd/concept/euclidean_ring.hpp [6:7]
        include/boost/hana/fwd/concept/foldable.hpp [6:7]
        include/boost/hana/fwd/concept/functor.hpp [6:7]
        include/boost/hana/fwd/concept/group.hpp [6:7]
        include/boost/hana/fwd/concept/hashable.hpp [7:8]
        include/boost/hana/fwd/concept/integral_constant.hpp [6:7]
        include/boost/hana/fwd/concept/iterable.hpp [6:7]
        include/boost/hana/fwd/concept/logical.hpp [6:7]
        include/boost/hana/fwd/concept/metafunction.hpp [6:7]
        include/boost/hana/fwd/concept/monad.hpp [6:7]
        include/boost/hana/fwd/concept/monad_plus.hpp [6:7]
        include/boost/hana/fwd/concept/monoid.hpp [6:7]
        include/boost/hana/fwd/concept/orderable.hpp [6:7]
        include/boost/hana/fwd/concept/product.hpp [6:7]
        include/boost/hana/fwd/concept/ring.hpp [6:7]
        include/boost/hana/fwd/concept/searchable.hpp [6:7]
        include/boost/hana/fwd/concept/sequence.hpp [6:7]
        include/boost/hana/fwd/concept/struct.hpp [6:7]
        include/boost/hana/fwd/contains.hpp [6:7]
        include/boost/hana/fwd/core.hpp [6:7]
        include/boost/hana/fwd/core/common.hpp [6:7]
        include/boost/hana/fwd/core/default.hpp [6:7]
        include/boost/hana/fwd/core/is_a.hpp [6:7]
        include/boost/hana/fwd/core/make.hpp [6:7]
        include/boost/hana/fwd/core/tag_of.hpp [6:7]
        include/boost/hana/fwd/core/to.hpp [6:7]
        include/boost/hana/fwd/core/when.hpp [6:7]
        include/boost/hana/fwd/count.hpp [6:7]
        include/boost/hana/fwd/count_if.hpp [6:7]
        include/boost/hana/fwd/cycle.hpp [6:7]
        include/boost/hana/fwd/define_struct.hpp [6:7]
        include/boost/hana/fwd/difference.hpp [6:7]
        include/boost/hana/fwd/div.hpp [6:7]
        include/boost/hana/fwd/drop_back.hpp [6:7]
        include/boost/hana/fwd/drop_front.hpp [6:7]
        include/boost/hana/fwd/drop_front_exactly.hpp [6:7]
        include/boost/hana/fwd/drop_while.hpp [6:7]
        include/boost/hana/fwd/duplicate.hpp [6:7]
        include/boost/hana/fwd/empty.hpp [6:7]
        include/boost/hana/fwd/equal.hpp [6:7]
        include/boost/hana/fwd/erase_key.hpp [6:7]
        include/boost/hana/fwd/eval.hpp [6:7]
        include/boost/hana/fwd/eval_if.hpp [6:7]
        include/boost/hana/fwd/extend.hpp [6:7]
        include/boost/hana/fwd/extract.hpp [6:7]
        include/boost/hana/fwd/fill.hpp [6:7]
        include/boost/hana/fwd/filter.hpp [6:7]
        include/boost/hana/fwd/find.hpp [6:7]
        include/boost/hana/fwd/find_if.hpp [6:7]
        include/boost/hana/fwd/first.hpp [6:7]
        include/boost/hana/fwd/flatten.hpp [6:7]
        include/boost/hana/fwd/fold.hpp [6:7]
        include/boost/hana/fwd/fold_left.hpp [6:7]
        include/boost/hana/fwd/fold_right.hpp [6:7]
        include/boost/hana/fwd/for_each.hpp [6:7]
        include/boost/hana/fwd/front.hpp [6:7]
        include/boost/hana/fwd/fuse.hpp [6:7]
        include/boost/hana/fwd/greater.hpp [6:7]
        include/boost/hana/fwd/greater_equal.hpp [6:7]
        include/boost/hana/fwd/group.hpp [6:7]
        include/boost/hana/fwd/hash.hpp [7:8]
        include/boost/hana/fwd/if.hpp [6:7]
        include/boost/hana/fwd/index_if.hpp [7:8]
        include/boost/hana/fwd/insert.hpp [6:7]
        include/boost/hana/fwd/insert_range.hpp [6:7]
        include/boost/hana/fwd/integral_constant.hpp [6:7]
        include/boost/hana/fwd/intersection.hpp [6:7]
        include/boost/hana/fwd/intersperse.hpp [6:7]
        include/boost/hana/fwd/is_disjoint.hpp [6:7]
        include/boost/hana/fwd/is_empty.hpp [6:7]
        include/boost/hana/fwd/is_subset.hpp [6:7]
        include/boost/hana/fwd/keys.hpp [6:7]
        include/boost/hana/fwd/lazy.hpp [6:7]
        include/boost/hana/fwd/length.hpp [6:7]
        include/boost/hana/fwd/less.hpp [6:7]
        include/boost/hana/fwd/less_equal.hpp [6:7]
        include/boost/hana/fwd/lexicographical_compare.hpp [6:7]
        include/boost/hana/fwd/lift.hpp [6:7]
        include/boost/hana/fwd/map.hpp [6:7]
        include/boost/hana/fwd/max.hpp [6:7]
        include/boost/hana/fwd/maximum.hpp [6:7]
        include/boost/hana/fwd/members.hpp [6:7]
        include/boost/hana/fwd/min.hpp [6:7]
        include/boost/hana/fwd/minimum.hpp [6:7]
        include/boost/hana/fwd/minus.hpp [6:7]
        include/boost/hana/fwd/mod.hpp [6:7]
        include/boost/hana/fwd/monadic_compose.hpp [6:7]
        include/boost/hana/fwd/monadic_fold_left.hpp [6:7]
        include/boost/hana/fwd/monadic_fold_right.hpp [6:7]
        include/boost/hana/fwd/mult.hpp [6:7]
        include/boost/hana/fwd/negate.hpp [6:7]
        include/boost/hana/fwd/none.hpp [6:7]
        include/boost/hana/fwd/none_of.hpp [6:7]
        include/boost/hana/fwd/not.hpp [6:7]
        include/boost/hana/fwd/not_equal.hpp [6:7]
        include/boost/hana/fwd/one.hpp [6:7]
        include/boost/hana/fwd/optional.hpp [6:7]
        include/boost/hana/fwd/or.hpp [6:7]
        include/boost/hana/fwd/ordering.hpp [6:7]
        include/boost/hana/fwd/pair.hpp [6:7]
        include/boost/hana/fwd/partition.hpp [6:7]
        include/boost/hana/fwd/permutations.hpp [6:7]
        include/boost/hana/fwd/plus.hpp [6:7]
        include/boost/hana/fwd/power.hpp [6:7]
        include/boost/hana/fwd/prefix.hpp [6:7]
        include/boost/hana/fwd/prepend.hpp [6:7]
        include/boost/hana/fwd/product.hpp [6:7]
        include/boost/hana/fwd/range.hpp [6:7]
        include/boost/hana/fwd/remove.hpp [6:7]
        include/boost/hana/fwd/remove_at.hpp [6:7]
        include/boost/hana/fwd/remove_if.hpp [6:7]
        include/boost/hana/fwd/remove_range.hpp [6:7]
        include/boost/hana/fwd/repeat.hpp [6:7]
        include/boost/hana/fwd/replace.hpp [6:7]
        include/boost/hana/fwd/replace_if.hpp [6:7]
        include/boost/hana/fwd/replicate.hpp [6:7]
        include/boost/hana/fwd/reverse.hpp [6:7]
        include/boost/hana/fwd/reverse_fold.hpp [6:7]
        include/boost/hana/fwd/scan_left.hpp [6:7]
        include/boost/hana/fwd/scan_right.hpp [6:7]
        include/boost/hana/fwd/second.hpp [6:7]
        include/boost/hana/fwd/set.hpp [6:7]
        include/boost/hana/fwd/size.hpp [6:7]
        include/boost/hana/fwd/slice.hpp [6:7]
        include/boost/hana/fwd/sort.hpp [6:7]
        include/boost/hana/fwd/span.hpp [6:7]
        include/boost/hana/fwd/string.hpp [6:7]
        include/boost/hana/fwd/suffix.hpp [6:7]
        include/boost/hana/fwd/sum.hpp [6:7]
        include/boost/hana/fwd/symmetric_difference.hpp [6:7]
        include/boost/hana/fwd/take_back.hpp [6:7]
        include/boost/hana/fwd/take_front.hpp [6:7]
        include/boost/hana/fwd/take_while.hpp [6:7]
        include/boost/hana/fwd/tap.hpp [6:7]
        include/boost/hana/fwd/then.hpp [6:7]
        include/boost/hana/fwd/transform.hpp [6:7]
        include/boost/hana/fwd/tuple.hpp [6:7]
        include/boost/hana/fwd/type.hpp [6:7]
        include/boost/hana/fwd/unfold_left.hpp [6:7]
        include/boost/hana/fwd/unfold_right.hpp [6:7]
        include/boost/hana/fwd/union.hpp [6:7]
        include/boost/hana/fwd/unique.hpp [6:7]
        include/boost/hana/fwd/unpack.hpp [6:7]
        include/boost/hana/fwd/value.hpp [6:7]
        include/boost/hana/fwd/while.hpp [6:7]
        include/boost/hana/fwd/zero.hpp [6:7]
        include/boost/hana/fwd/zip.hpp [6:7]
        include/boost/hana/fwd/zip_shortest.hpp [6:7]
        include/boost/hana/fwd/zip_shortest_with.hpp [6:7]
        include/boost/hana/fwd/zip_with.hpp [6:7]
        include/boost/hana/greater.hpp [6:7]
        include/boost/hana/greater_equal.hpp [6:7]
        include/boost/hana/group.hpp [6:7]
        include/boost/hana/hash.hpp [6:7]
        include/boost/hana/if.hpp [6:7]
        include/boost/hana/index_if.hpp [7:8]
        include/boost/hana/insert.hpp [6:7]
        include/boost/hana/insert_range.hpp [6:7]
        include/boost/hana/integral_constant.hpp [6:7]
        include/boost/hana/intersection.hpp [6:7]
        include/boost/hana/intersperse.hpp [6:7]
        include/boost/hana/is_disjoint.hpp [6:7]
        include/boost/hana/is_empty.hpp [6:7]
        include/boost/hana/is_subset.hpp [6:7]
        include/boost/hana/keys.hpp [6:7]
        include/boost/hana/lazy.hpp [6:7]
        include/boost/hana/length.hpp [6:7]
        include/boost/hana/less.hpp [6:7]
        include/boost/hana/less_equal.hpp [6:7]
        include/boost/hana/lexicographical_compare.hpp [6:7]
        include/boost/hana/lift.hpp [6:7]
        include/boost/hana/map.hpp [6:7]
        include/boost/hana/max.hpp [6:7]
        include/boost/hana/maximum.hpp [6:7]
        include/boost/hana/members.hpp [6:7]
        include/boost/hana/min.hpp [6:7]
        include/boost/hana/minimum.hpp [6:7]
        include/boost/hana/minus.hpp [6:7]
        include/boost/hana/mod.hpp [6:7]
        include/boost/hana/monadic_compose.hpp [6:7]
        include/boost/hana/monadic_fold_left.hpp [6:7]
        include/boost/hana/monadic_fold_right.hpp [6:7]
        include/boost/hana/mult.hpp [6:7]
        include/boost/hana/negate.hpp [6:7]
        include/boost/hana/none.hpp [6:7]
        include/boost/hana/none_of.hpp [6:7]
        include/boost/hana/not.hpp [6:7]
        include/boost/hana/not_equal.hpp [6:7]
        include/boost/hana/one.hpp [6:7]
        include/boost/hana/optional.hpp [6:7]
        include/boost/hana/or.hpp [6:7]
        include/boost/hana/ordering.hpp [6:7]
        include/boost/hana/pair.hpp [6:7]
        include/boost/hana/partition.hpp [6:7]
        include/boost/hana/permutations.hpp [6:7]
        include/boost/hana/plus.hpp [6:7]
        include/boost/hana/power.hpp [6:7]
        include/boost/hana/prefix.hpp [6:7]
        include/boost/hana/prepend.hpp [6:7]
        include/boost/hana/product.hpp [6:7]
        include/boost/hana/range.hpp [6:7]
        include/boost/hana/remove.hpp [6:7]
        include/boost/hana/remove_at.hpp [6:7]
        include/boost/hana/remove_if.hpp [6:7]
        include/boost/hana/remove_range.hpp [6:7]
        include/boost/hana/repeat.hpp [6:7]
        include/boost/hana/replace.hpp [6:7]
        include/boost/hana/replace_if.hpp [6:7]
        include/boost/hana/replicate.hpp [6:7]
        include/boost/hana/reverse.hpp [6:7]
        include/boost/hana/reverse_fold.hpp [6:7]
        include/boost/hana/scan_left.hpp [6:7]
        include/boost/hana/scan_right.hpp [6:7]
        include/boost/hana/second.hpp [6:7]
        include/boost/hana/set.hpp [6:7]
        include/boost/hana/size.hpp [6:7]
        include/boost/hana/slice.hpp [6:7]
        include/boost/hana/sort.hpp [6:7]
        include/boost/hana/span.hpp [6:7]
        include/boost/hana/string.hpp [6:7]
        include/boost/hana/suffix.hpp [6:7]
        include/boost/hana/sum.hpp [6:7]
        include/boost/hana/symmetric_difference.hpp [6:7]
        include/boost/hana/take_back.hpp [6:7]
        include/boost/hana/take_front.hpp [6:7]
        include/boost/hana/take_while.hpp [6:7]
        include/boost/hana/tap.hpp [6:7]
        include/boost/hana/then.hpp [6:7]
        include/boost/hana/traits.hpp [7:8]
        include/boost/hana/transform.hpp [6:7]
        include/boost/hana/tuple.hpp [7:8]
        include/boost/hana/type.hpp [6:7]
        include/boost/hana/unfold_left.hpp [6:7]
        include/boost/hana/unfold_right.hpp [6:7]
        include/boost/hana/union.hpp [6:7]
        include/boost/hana/unique.hpp [6:7]
        include/boost/hana/unpack.hpp [6:7]
        include/boost/hana/value.hpp [6:7]
        include/boost/hana/version.hpp [6:7]
        include/boost/hana/while.hpp [6:7]
        include/boost/hana/zero.hpp [6:7]
        include/boost/hana/zip.hpp [6:7]
        include/boost/hana/zip_shortest.hpp [6:7]
        include/boost/hana/zip_shortest_with.hpp [6:7]
        include/boost/hana/zip_with.hpp [6:7]

SKIP     MPL-1.1              695c14b33a53ff0673eb14307611656b
BELONGS ya.make
    License text:
            //! Given a MPL-style metafunction, `metafunction<f>` is a `Metafunction`
    Scancode info:
        Original SPDX id: MPL-1.1
        Score           : 80.00
        Match type      : REFERENCE
        Links           : http://www.mozilla.com/MPL/1.1/index.html, http://www.mozilla.org/MPL/MPL-1.1.html, https://spdx.org/licenses/MPL-1.1
    Files with this license:
        include/boost/hana/fwd/type.hpp [420:420]

SKIP     MPL-1.1              80499698582f4da56012c9acc6d83c52
BELONGS ya.make
    License text:
            //! Lift a MPL-style metafunction class to a Metafunction.
    Scancode info:
        Original SPDX id: MPL-1.1
        Score           : 80.00
        Match type      : REFERENCE
        Links           : http://www.mozilla.com/MPL/1.1/index.html, http://www.mozilla.org/MPL/MPL-1.1.html, https://spdx.org/licenses/MPL-1.1
    Files with this license:
        include/boost/hana/fwd/type.hpp [448:448]

SKIP     MPL-1.1              e5f161acc2254dcdb84c03a759f0ad62
BELONGS ya.make
    License text:
            //! Classic MPL-style metafunction returning the nth element of a type
    Scancode info:
        Original SPDX id: MPL-1.1
        Score           : 80.00
        Match type      : REFERENCE
        Links           : http://www.mozilla.com/MPL/1.1/index.html, http://www.mozilla.org/MPL/MPL-1.1.html, https://spdx.org/licenses/MPL-1.1
    Files with this license:
        include/boost/hana/detail/type_at.hpp [44:44]

SKIP     LicenseRef-scancode-unknown-license-reference ef05950e7899f27b1d26a870d94b1ce6
BELONGS ya.make
    License text:
        Please see [LICENSE.md](LICENSE.md).
    Scancode info:
        Original SPDX id: LicenseRef-scancode-unknown-license-reference
        Score           : 100.00
        Match type      : REFERENCE
        Links           : https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/unknown-license-reference.LICENSE
    Files with this license:
        README.md [170:170]

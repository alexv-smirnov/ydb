# File format ($ symbol means the beginning of a line):
#
# $ # this message
# $ # =======================
# $     # comments (all commentaries should starts with some number of spaces and # symbol)
# $ IGNORE_FILES {file1.ext1} {file2.ext2} - (optional) ignore listed files when generating license macro and credits
# $ RENAME {original license id} TO {new license id} # user comments - (optional) use {new license id} instead {original license id} in ya.make files
# $ # user comments
# $
# ${action} {license id} {license text hash}
# $BELONGS ./ya/make/file/relative/path/1/ya.make ./ya/make/2/ya.make
# ${all_file_action} filename
# $ # user commentaries (many lines)
# $ generated description - files with this license, license text... (some number of lines that starts with some number of spaces, do not modify)
# ${action} {license spdx} {license text hash}
# $BELONGS ./ya/make/file/relative/path/3/ya.make
# ${all_file_action} filename
# $    #    user commentaries
# $ generated description
# $ ...
#
# You can modify action, all_file_action and add commentaries
# Available actions:
# keep - keep license in contrib and use in credits
# skip - skip license
# remove - remove all files with this license
# rename - save license text/links into licenses texts file, but not store SPDX into LINCENSE macro. You should store correct license id into devtools.license.spdx.txt file
#
# {all file action} records will be generated when license text contains filename that exists on filesystem (in contrib directory)
# We suppose that that files can contain some license info
# Available all file actions:
# FILE_IGNORE - ignore file (do nothing)
# FILE_INCLUDE - include all file data into licenses text file
# =======================

KEEP     BSL-1.0              c3616e6a4ba8162a065541626a8ff94c
BELONGS ya.make
    License text:
        // Distributed under the Boost Software License Version 1.0. (See
        // accompanying file LICENSE_1_0.txt or copy at
        // http://www.boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_erasure/any.hpp [5:7]
        include/boost/type_erasure/any_cast.hpp [5:7]
        include/boost/type_erasure/binding.hpp [5:7]
        include/boost/type_erasure/binding_of.hpp [5:7]
        include/boost/type_erasure/builtin.hpp [5:7]
        include/boost/type_erasure/call.hpp [5:7]
        include/boost/type_erasure/callable.hpp [5:7]
        include/boost/type_erasure/check_match.hpp [5:7]
        include/boost/type_erasure/concept_interface.hpp [5:7]
        include/boost/type_erasure/concept_of.hpp [5:7]
        include/boost/type_erasure/config.hpp [5:7]
        include/boost/type_erasure/constructible.hpp [5:7]
        include/boost/type_erasure/deduced.hpp [5:7]
        include/boost/type_erasure/derived.hpp [5:7]
        include/boost/type_erasure/detail/access.hpp [5:7]
        include/boost/type_erasure/detail/adapt_to_vtable.hpp [5:7]
        include/boost/type_erasure/detail/any_base.hpp [5:7]
        include/boost/type_erasure/detail/auto_link.hpp [5:7]
        include/boost/type_erasure/detail/check_call.hpp [5:7]
        include/boost/type_erasure/detail/check_map.hpp [5:7]
        include/boost/type_erasure/detail/const.hpp [5:7]
        include/boost/type_erasure/detail/construct.hpp [5:7]
        include/boost/type_erasure/detail/dynamic_vtable.hpp [5:7]
        include/boost/type_erasure/detail/extract_concept.hpp [5:7]
        include/boost/type_erasure/detail/get_placeholders.hpp [5:7]
        include/boost/type_erasure/detail/get_signature.hpp [5:7]
        include/boost/type_erasure/detail/instantiate.hpp [5:7]
        include/boost/type_erasure/detail/macro.hpp [5:7]
        include/boost/type_erasure/detail/member11.hpp [5:7]
        include/boost/type_erasure/detail/meta.hpp [5:7]
        include/boost/type_erasure/detail/normalize.hpp [5:7]
        include/boost/type_erasure/detail/normalize_deduced.hpp [5:7]
        include/boost/type_erasure/detail/null.hpp [5:7]
        include/boost/type_erasure/detail/rebind_placeholders.hpp [5:7]
        include/boost/type_erasure/detail/storage.hpp [5:7]
        include/boost/type_erasure/detail/vtable.hpp [5:7]
        include/boost/type_erasure/dynamic_any_cast.hpp [5:7]
        include/boost/type_erasure/dynamic_binding.hpp [5:7]
        include/boost/type_erasure/exception.hpp [5:7]
        include/boost/type_erasure/free.hpp [5:7]
        include/boost/type_erasure/is_empty.hpp [5:7]
        include/boost/type_erasure/is_placeholder.hpp [5:7]
        include/boost/type_erasure/is_subconcept.hpp [5:7]
        include/boost/type_erasure/iterator.hpp [5:7]
        include/boost/type_erasure/member.hpp [5:7]
        include/boost/type_erasure/operators.hpp [5:7]
        include/boost/type_erasure/param.hpp [5:7]
        include/boost/type_erasure/placeholder.hpp [5:7]
        include/boost/type_erasure/placeholder_of.hpp [5:7]
        include/boost/type_erasure/rebind_any.hpp [5:7]
        include/boost/type_erasure/register_binding.hpp [5:7]
        include/boost/type_erasure/relaxed.hpp [5:7]
        include/boost/type_erasure/require_match.hpp [5:7]
        include/boost/type_erasure/same_type.hpp [5:7]
        include/boost/type_erasure/static_binding.hpp [5:7]
        include/boost/type_erasure/tuple.hpp [5:7]
        include/boost/type_erasure/typeid_of.hpp [5:7]
        src/dynamic_binding.cpp [5:7]

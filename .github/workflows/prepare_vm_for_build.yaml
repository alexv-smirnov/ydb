name: On-demand VM Build+Test

on:
  workflow_call:
    inputs:
      runner_label:
        required: true
        type: string
        
jobs:
  prepare:
    runs-on: ${{ inputs.runner_label }} # run the job on a particula runner
    steps:
    - name: Install YDB Build dependencies
      shell: bash
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | sudo apt-key add -
        echo "deb http://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
        echo "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/llvm.list >/dev/null
        sudo apt-get update
        sudo apt-get -y install git cmake python3-pip ninja-build antlr3 m4 clang-12 lld-12 libidn11-dev libaio1 libaio-dev
        sudo pip3 install conan==1.59
    - name: Install AllureCtl
      shell: bash
      run: |
        wget https://github.com/allure-framework/allurectl/releases/latest/download/allurectl_linux_386 -O ~/allurectl
        chmod +x ~/allurectl
    - name: Checkout ccache
      uses: actions/checkout@v3
      with:
        repository: ccache/ccache
        path: ccache
    - name: Build ccache
      shell: bash
      run: |
        pwd
        cd ccache
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j32
        make install
        ccache --set-config=remote_storage='http://${{secrets.REMOTE_CACHE_AUTH}}${{vars.REMOTE_CACHE_URL}}'
        ccache --set-config=max_size=50G


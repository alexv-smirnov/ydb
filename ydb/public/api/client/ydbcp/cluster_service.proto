syntax = "proto3";

import "ydb/public/api/client/yc_private/operation/operation.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

package yandex.cloud.priv.ydb.v1;
option go_package = "github.com/ydb-platform/ydb/ydb/public/api/client/ydbcp;ydb";

message ClusterStorageConfig { int64 groups_count = 1; }

message ClusterScalePolicy { int64 nodes_count = 1; }

enum Erasure {
  ERASURE_UNSPECIFIED = 0;
  BLOCK_4_2 = 1;
  MIRROR_3_DC = 2;
}

message Cluster {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    PROVISIONING = 1;
    RUNNING = 2;
    UPDATING = 4;
    ERROR = 5;
    DELETING = 6;
  }

  string cluster_id = 2;
  string folder_id = 3;
  google.protobuf.Timestamp created_at = 4;
  string name = 5;
  string description = 6;

  Status status = 7;

  Erasure erasure = 8;

  repeated string datacenters = 9; // klg, sas, vla

  ClusterStorageConfig storage_config = 10;
  ClusterScalePolicy scale_policy = 11;

  map<string, string> labels = 12;

  string cloud_id = 13;
}

message GetClusterRequest { string cluster_id = 1; }

message ListClustersRequest {
  string folder_id = 1;

  // The maximum number of results per page that should be returned. If the
  // number of available results is larger than `page_size`, the service returns
  // a `next_page_token` that can be used to get the next page of results in
  // subsequent ListClusters requests. Acceptable values are 0 to 1000,
  // inclusive. Default value: 100.
  int64 page_size = 2; // [ (value) = "0-1000" ];

  // Page token. Set `page_token` to the `next_page_token` returned by a
  // previous ListClusters request to get the next page of results.
  string page_token = 3; // [ (length) = "<=100" ];
}

message ListClustersResponse {
  repeated Cluster clusters = 1;
  string next_page_token = 2;
}

message ListAllClustersRequest {}

message ListAllClustersResponse { repeated Cluster clusters = 1; }

message CreateClusterRequest {
  string folder_id = 1;

  string name = 2;
  string description = 3;

  Erasure erasure = 4;
  repeated string datacenters = 5; // klg, sas, vla

  // XXX(shmel1k@): probably, bad idea.
  ClusterStorageConfig storage_config = 6; // required groups count
  ClusterScalePolicy scale_policy = 7;     // dynnodes count

  // TODO(shmel1k@): design hosts/groups API. kinda node_flavor

  map<string, string> labels = 8;
}

message UpdateClusterRequest {
  string cluster_id = 1;
  string folder_id = 2;
  google.protobuf.FieldMask update_mask = 3;

  string cluster_name = 4;

  string description = 5;
  map<string, string> labels = 6;

  // NOTE(shmel1k@): in the future
  ClusterStorageConfig storage_config = 7;
  // User may want to expand his cluster.
  // User may want to compress (make less nodes, make less storage at all.)
}

message GetByHostRequest { string fqdn = 1; }

message CreateClusterMetadata { string cluster_id = 2; }

message UpdateClusterMetadata { string cluster_id = 2; }

message DeleteClusterMetadata { string cluster_id = 2; }

message DeleteClusterRequest { string cluster_id = 2; }

service ClusterService {
  rpc Get(GetClusterRequest) returns (Cluster);
  rpc List(ListClustersRequest) returns (ListClustersResponse);
  rpc ListAll(ListAllClustersRequest) returns (ListClustersResponse);
  rpc Create(CreateClusterRequest) returns (operation.Operation);
  rpc Update(UpdateClusterRequest) returns (operation.Operation);
  rpc GetByHost(GetByHostRequest)
      returns (Cluster); // NOTE: required for CMS Proxy.

  rpc Delete(DeleteClusterRequest) returns (operation.Operation);
}
